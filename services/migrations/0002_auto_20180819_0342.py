# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-08-19 01:42
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0018_auto_20180819_0342'),
        ('employees', '0001_initial'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsumablesRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('department', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumable_authorized_by', to='employees.Employee')),
                ('released_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumable_released_by', to='employees.Employee')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumable_requested_by', to='employees.Employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumablesRequisitionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('returned', models.FloatField(default=0.0)),
                ('consumable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Consumable')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.UnitOfMeasure')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('department', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_by', to='employees.Employee')),
                ('released_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='released_by', to='employees.Employee')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_by', to='employees.Employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentRequisitionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('quantity_returned', models.FloatField()),
                ('requesting_condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('poor', 'Poor'), ('broken', 'Not Functioning')], max_length=16)),
                ('returned_condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('poor', 'Poor'), ('broken', 'Not Functioning')], max_length=16)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.ServiceCategory')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('as_checklist', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('required_consumables', models.ManyToManyField(blank=True, to='inventory.Consumable')),
                ('required_equipment', models.ManyToManyField(blank=True, to='inventory.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='ServicesManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_authorize_equipment_requisitions', models.BooleanField(default=False)),
                ('can_authorize_consumables_requisitions', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ServicesPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceWorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField(choices=[(datetime.time(6, 0), b'06:00'), (datetime.time(6, 30), b'06:30'), (datetime.time(7, 0), b'07:00'), (datetime.time(7, 30), b'07:30'), (datetime.time(8, 0), b'08:00'), (datetime.time(8, 30), b'08:30'), (datetime.time(9, 0), b'09:00'), (datetime.time(9, 30), b'09:30'), (datetime.time(10, 0), b'10:00'), (datetime.time(10, 30), b'10:30'), (datetime.time(11, 0), b'11:00'), (datetime.time(11, 30), b'11:30'), (datetime.time(12, 0), b'12:00'), (datetime.time(12, 30), b'12:30'), (datetime.time(13, 0), b'13:00'), (datetime.time(13, 30), b'13:30'), (datetime.time(14, 0), b'14:00'), (datetime.time(14, 30), b'14:30'), (datetime.time(15, 0), b'15:00'), (datetime.time(15, 30), b'15:30'), (datetime.time(16, 0), b'16:00'), (datetime.time(16, 30), b'16:30'), (datetime.time(17, 0), b'17:00'), (datetime.time(17, 30), b'17:30'), (datetime.time(18, 0), b'18:00')])),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('expected_duration', models.DurationField(blank=True, choices=[(datetime.timedelta(0), b'00:00'), (datetime.timedelta(0, 1800), b'00:30'), (datetime.timedelta(0, 3600), b'01:00'), (datetime.timedelta(0, 5400), b'01:30'), (datetime.timedelta(0, 7200), b'02:00'), (datetime.timedelta(0, 9000), b'02:30'), (datetime.timedelta(0, 10800), b'03:00'), (datetime.timedelta(0, 12600), b'03:30'), (datetime.timedelta(0, 14400), b'04:00'), (datetime.timedelta(0, 16200), b'04:30'), (datetime.timedelta(0, 18000), b'05:00'), (datetime.timedelta(0, 19800), b'05:30'), (datetime.timedelta(0, 21600), b'06:00'), (datetime.timedelta(0, 23400), b'06:30'), (datetime.timedelta(0, 25200), b'07:00'), (datetime.timedelta(0, 27000), b'07:30')], null=True)),
                ('actual_duration', models.DurationField(blank=True, choices=[(datetime.timedelta(0), b'00:00'), (datetime.timedelta(0, 1800), b'00:30'), (datetime.timedelta(0, 3600), b'01:00'), (datetime.timedelta(0, 5400), b'01:30'), (datetime.timedelta(0, 7200), b'02:00'), (datetime.timedelta(0, 9000), b'02:30'), (datetime.timedelta(0, 10800), b'03:00'), (datetime.timedelta(0, 12600), b'03:30'), (datetime.timedelta(0, 14400), b'04:00'), (datetime.timedelta(0, 16200), b'04:30'), (datetime.timedelta(0, 18000), b'05:00'), (datetime.timedelta(0, 19800), b'05:30'), (datetime.timedelta(0, 21600), b'06:00'), (datetime.timedelta(0, 23400), b'06:30'), (datetime.timedelta(0, 25200), b'07:00'), (datetime.timedelta(0, 27000), b'07:30')], null=True)),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('progress', 'In progress'), ('completed', 'Completed'), ('authorized', 'Authorized'), ('declined', 'Declined')], max_length=16)),
                ('comments', models.TextField(blank=True)),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.Employee')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.ServiceTeam')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='frequency',
            field=models.CharField(choices=[('once', 'Once off'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('fortnightly', 'Every 2 weeks'), ('monthly', 'Monthly'), ('quarterly', 'Every 3 Months'), ('bi-annually', 'Every 6 Months'), ('yearly', 'Yearly')], default='once', max_length=16),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='is_listed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='services.ServiceCategory'),
            preserve_default=False,
        ),
    ]
