# Generated by Django 2.1.1 on 2018-10-26 04:10

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsumablesRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('department', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('authorized_by', models.ForeignKey(null=True, on_delete=None, related_name='consumable_authorized_by', to='employees.Employee')),
                ('released_by', models.ForeignKey(null=True, on_delete=None, related_name='consumable_released_by', to='employees.Employee')),
                ('requested_by', models.ForeignKey(on_delete=None, related_name='consumable_requested_by', to='employees.Employee')),
                ('warehouse', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='inventory.WareHouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumablesRequisitionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('returned', models.FloatField(default=0.0)),
                ('consumable', models.ForeignKey(on_delete=None, to='inventory.Consumable')),
                ('requisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.ConsumablesRequisition')),
                ('unit', models.ForeignKey(on_delete=None, to='inventory.UnitOfMeasure')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('department', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('authorized_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authorized_by', to='employees.Employee')),
                ('released_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='released_by', to='employees.Employee')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_by', to='employees.Employee')),
                ('warehouse', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='inventory.WareHouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentRequisitionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('quantity_returned', models.FloatField(default=0)),
                ('requesting_condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('poor', 'Poor'), ('broken', 'Not Functioning')], max_length=16)),
                ('returned_condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('poor', 'Poor'), ('broken', 'Not Functioning')], max_length=16, null=True)),
                ('equipment', models.ForeignKey(on_delete=None, to='inventory.Equipment')),
                ('requisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.EquipmentRequisition')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('flat_fee', models.DecimalField(decimal_places=2, max_digits=6)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('frequency', models.CharField(choices=[('once', 'Once off'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('fortnightly', 'Every 2 weeks'), ('monthly', 'Monthly'), ('quarterly', 'Every 3 Months'), ('bi-annually', 'Every 6 Months'), ('yearly', 'Yearly')], max_length=16)),
                ('is_listed', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.ServiceCategory')),
            ],
        ),
        migrations.CreateModel(
            name='ServicePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_manager', models.BooleanField(default=False)),
                ('can_authorize_equipment_requisitions', models.BooleanField(default=False)),
                ('can_authorize_consumables_requisitions', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=None, to='employees.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('as_checklist', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('required_consumables', models.ManyToManyField(blank=True, to='inventory.Consumable')),
                ('required_equipment', models.ManyToManyField(blank=True, to='inventory.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=None, related_name='service_team_manager', to='services.ServicePerson')),
                ('members', models.ManyToManyField(related_name='service_team_members', to='services.ServicePerson')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceWorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField(choices=[(datetime.time(6, 0), '06:00'), (datetime.time(6, 30), '06:30'), (datetime.time(7, 0), '07:00'), (datetime.time(7, 30), '07:30'), (datetime.time(8, 0), '08:00'), (datetime.time(8, 30), '08:30'), (datetime.time(9, 0), '09:00'), (datetime.time(9, 30), '09:30'), (datetime.time(10, 0), '10:00'), (datetime.time(10, 30), '10:30'), (datetime.time(11, 0), '11:00'), (datetime.time(11, 30), '11:30'), (datetime.time(12, 0), '12:00'), (datetime.time(12, 30), '12:30'), (datetime.time(13, 0), '13:00'), (datetime.time(13, 30), '13:30'), (datetime.time(14, 0), '14:00'), (datetime.time(14, 30), '14:30'), (datetime.time(15, 0), '15:00'), (datetime.time(15, 30), '15:30'), (datetime.time(16, 0), '16:00'), (datetime.time(16, 30), '16:30'), (datetime.time(17, 0), '17:00'), (datetime.time(17, 30), '17:30'), (datetime.time(18, 0), '18:00')])),
                ('description', models.TextField(blank=True, default='')),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('expected_duration', models.DurationField(blank=True, choices=[(datetime.timedelta(0), '00:00'), (datetime.timedelta(seconds=1800), '00:30'), (datetime.timedelta(seconds=3600), '01:00'), (datetime.timedelta(seconds=5400), '01:30'), (datetime.timedelta(seconds=7200), '02:00'), (datetime.timedelta(seconds=9000), '02:30'), (datetime.timedelta(seconds=10800), '03:00'), (datetime.timedelta(seconds=12600), '03:30'), (datetime.timedelta(seconds=14400), '04:00'), (datetime.timedelta(seconds=16200), '04:30'), (datetime.timedelta(seconds=18000), '05:00'), (datetime.timedelta(seconds=19800), '05:30'), (datetime.timedelta(seconds=21600), '06:00'), (datetime.timedelta(seconds=23400), '06:30'), (datetime.timedelta(seconds=25200), '07:00'), (datetime.timedelta(seconds=27000), '07:30')], null=True)),
                ('actual_duration', models.DurationField(blank=True, choices=[(datetime.timedelta(0), '00:00'), (datetime.timedelta(seconds=1800), '00:30'), (datetime.timedelta(seconds=3600), '01:00'), (datetime.timedelta(seconds=5400), '01:30'), (datetime.timedelta(seconds=7200), '02:00'), (datetime.timedelta(seconds=9000), '02:30'), (datetime.timedelta(seconds=10800), '03:00'), (datetime.timedelta(seconds=12600), '03:30'), (datetime.timedelta(seconds=14400), '04:00'), (datetime.timedelta(seconds=16200), '04:30'), (datetime.timedelta(seconds=18000), '05:00'), (datetime.timedelta(seconds=19800), '05:30'), (datetime.timedelta(seconds=21600), '06:00'), (datetime.timedelta(seconds=23400), '06:30'), (datetime.timedelta(seconds=25200), '07:00'), (datetime.timedelta(seconds=27000), '07:30')], null=True)),
                ('status', models.CharField(blank=True, choices=[('requested', 'Requested'), ('progress', 'In progress'), ('completed', 'Completed'), ('authorized', 'Authorized'), ('declined', 'Declined')], max_length=16)),
                ('comments', models.TextField(blank=True)),
                ('authorized_by', models.ForeignKey(blank=True, limit_choices_to=models.Q(user__isnull=False), null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.Employee')),
                ('service_people', models.ManyToManyField(blank=True, to='services.ServicePerson')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=None, to='services.ServiceTeam')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.ServiceProcedure')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=None, to='services.ServiceCategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='procedure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.ServiceProcedure'),
        ),
    ]
